namespace Accelerator.Commercetools.Importer.Extensions;

public static class Extension
{
    public static string TrimAutoGeneratedName(this string stringToTrim)
    {
        return stringToTrim switch
        {
            var inv when inv.Contains(Constants.AutoGeneratedNames.FolderName.Inventory) => Trim(stringToTrim,
                Constants.AutoGeneratedNames.FolderName.Inventory,
                Constants.AutoGeneratedNames.EndOfAutoGeneratedTypeName),
            var price when price.Contains(Constants.AutoGeneratedNames.FolderName.Price) => Trim(stringToTrim,
                Constants.AutoGeneratedNames.FolderName.Price,
                Constants.AutoGeneratedNames.EndOfAutoGeneratedTypeName),
            var category when category.Contains(Constants.AutoGeneratedNames.FolderName.Category) => Trim(stringToTrim,
                Constants.AutoGeneratedNames.FolderName.Category,
                Constants.AutoGeneratedNames.EndOfAutoGeneratedTypeName),
            _ => throw new ArgumentOutOfRangeException(nameof(stringToTrim), stringToTrim, null)
        };
    }

    private static string Trim(string stringToTrim, string folderName, string trimmer)
    {
        var trimEndString = stringToTrim[..^trimmer.Length];
        return trimEndString.Substring(folderName.Length, trimEndString.Length - folderName.Length);
    }
}